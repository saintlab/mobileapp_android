buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/repo' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.15.2'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'android-apt'

repositories {
    maven { url 'https://maven.fabric.io/repo' }
}

apply plugin: 'hugo'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'LICENSE.txt'
    }

    productFlavors {
        production {
        }

        laaaab {
        }
    }

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        applicationId "com.omnom.android"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 53
        versionName "0.3.7"
    }

    signingConfigs {
        release {
            def projectDir = project.projectDir.toString()
            Properties releaseProps = new Properties()
            releaseProps.load(new FileInputStream(projectDir + '/release.properties'))
            storeFile file(projectDir + '/release-key.jks')
            storePassword releaseProps['keystore.password']
            keyAlias releaseProps['keyAlias']
            keyPassword releaseProps['keyPassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            resValue "string", "app_name", "Omnom"

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(output.outputFile.parent, output.outputFile.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
                }
            }
        }
        debug {
            minifyEnabled false
            applicationIdSuffix '.debug'
            resValue "string", "app_name", "Omnom Debug"
        }
    }
}

dependencies {
    // google
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.android.support:support-v4:21.0.3'

    // auto-parcel
    compile 'com.github.frankiesardo:auto-parcel:0.2'
    apt 'com.github.frankiesardo:auto-parcel-processor:0.2'

    // socket.io
    // compile 'com.github.nkzawa:socket.io-client:0.3.1@jar'
    // compile 'com.github.nkzawa:engine.io-client:0.3.1@jar'
    compile 'org.java-websocket:Java-WebSocket:1.3.0@jar'

    // square
    compile 'com.squareup.dagger:dagger:1.2.2'
    apt 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile 'com.squareup.picasso:picasso:2.3.4'
    compile 'com.squareup:otto:1.3.5'
    compile 'com.jakewharton:butterknife:5.1.1'
    compile 'com.squareup.okhttp:okhttp:2.1.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.1.0'

    // rx
    compile 'com.netflix.rxjava:rxjava-core:0.19.6'
    compile 'com.netflix.rxjava:rxjava-android:0.19.6'

    // other
    compile 'uk.co.chrisjenx:calligraphy:1.2.0'
    compile 'com.nhaarman.listviewanimations:lib-core:3.1.0@aar'
    compile 'com.nineoldandroids:library:2.4.0'

    compile 'com.mixpanel.android:mixpanel-android:4.3.1@aar'
    compile('de.keyboardsurfer.android.widget:crouton:1.8.5@aar') {
        exclude group: 'com.google.android', module: 'support-v4'
    }

    compile project(':libraries:Omnom.Altbeacon')
    compile project(':libraries:Omnom.Beacon')
    compile project(':libraries:Omnom.Zxing')
    compile project(':libraries:Omnom.Utils')
    compile project(':libraries:Omnom.Auth')
    compile project(':libraries:Omnom.Restaurateur')
    compile project(':libraries:Omnom.Menu')
    compile project(':libraries:Io.Socket.Client')
    compile project(':libraries:Io.Engine.Client')
    androidTestCompile('com.jakewharton.espresso:espresso:1.1-r3') {
        exclude group: 'com.squareup.dagger'
    }
    compile files('libs/card.io.jar')
    compile('com.crashlytics.sdk.android:crashlytics:2.0.1@aar') {
        transitive = true;
    }
}
