buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.15.2'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'android-apt'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'hugo'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOL_VERSION as String

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'LICENSE.txt'
    }

    productFlavors {
        production {
        }

        staging {
        }

        laaaab {
        }
    }

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        applicationId "com.omnom.android"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 60
        versionName "1.2.12"
    }

    signingConfigs {
        release {
            def projectDir = project.projectDir.toString()
            Properties releaseProps = new Properties()
            releaseProps.load(new FileInputStream(projectDir + '/release.properties'))
            storeFile file(projectDir + '/release-key.jks')
            storePassword releaseProps['keystore.password']
            keyAlias releaseProps['keyAlias']
            keyPassword releaseProps['keyPassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            resValue "string", "app_name", "Omnom"

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(output.outputFile.parent, output.outputFile.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
                }
            }
        }
        debug {
            minifyEnabled false
            applicationIdSuffix '.debug'
            resValue "string", "app_name", "Omnom Debug"
        }

        stageRelease.initWith(buildTypes.release)
        stageRelease {
            applicationIdSuffix '.staging'
            resValue "string", "app_name", "Omnom Staging"
        }
    }
}

dependencies {
    compile 'org.java-websocket:Java-WebSocket:1.3.0@jar'

    // auto-parcel
    compile 'com.github.frankiesardo:auto-parcel:' + AUTO_PARCEL_VERSION
    apt 'com.github.frankiesardo:auto-parcel-processor:' + AUTO_PARCEL_VERSION

    // other
    compile 'com.nhaarman.listviewanimations:lib-core:3.1.0@aar'
    compile 'com.nineoldandroids:library:2.4.0'

    compile 'com.squareup.dagger:dagger:' + DAGGER_VERSION
    apt 'com.squareup.dagger:dagger-compiler:' + DAGGER_VERSION

    compile 'com.mixpanel.android:mixpanel-android:4.4.1@aar'
    compile('de.keyboardsurfer.android.widget:crouton:1.8.5@aar') {
        exclude group: 'com.google.android', module: 'support-v4'
    }

    compile project(':libraries:Omnom.Altbeacon')
    compile project(':libraries:Omnom.Beacon')
    compile project(':libraries:Omnom.Zxing')
    compile project(':libraries:Omnom.Utils')
    compile project(':libraries:Omnom.Auth')
    compile project(':libraries:Omnom.Notifier')
    compile project(':libraries:Omnom.Restaurateur')
    compile project(':libraries:Omnom.Menu')
    compile project(':libraries:SlidingUpPanel:library')
    compile project(':libraries:recyclerview-animators:animators')
    compile project(':libraries:android-cropimage:CropImage')
    compile project(':libraries:Io.Socket.Client')
    compile project(':libraries:Io.Engine.Client')

    androidTestCompile('com.jakewharton.espresso:espresso:1.1-r3') {
        exclude group: 'com.squareup.dagger'
    }
    // test
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:0.2'
    androidTestCompile 'com.android.support:support-annotations:22.2.0'
    // Set this dependency to use JUnit 4 rules
    androidTestCompile 'com.android.support.test:rules:0.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.1'

    compile files('libs/card.io.jar')
    compile('com.crashlytics.sdk.android:crashlytics:2.2.4@aar') {
        transitive = true;
    }
    compile files('libs/pushwoosh-2.9.0.jar')
}
